version: '3.4'
services:
    postgres:
        image: mdillon/postgis:latest
        container_name: postgres
        env_file:
            - .env # make sure it contains POSTGRES_USER, POSTGRES_DB and POSTGRES_PASSWORD
        ports:
            - '5432:5432'
        volumes:
            - postgres_data:/var/lib/postgresql/data
        restart: always
    rabbitmq:
        image: rabbitmq:3.7-rc-management
        container_name: rabbitmq
        env_file:
            - .env
        restart: always
        ports:
            - '5672:5672'
            - '15672:15672'
    worker:
        build: ./fundanl
        container_name: worker
        command: celery -A celery_app worker -P eventlet -c 2 --loglevel=info
        env_file:
            - .env #RABBITMQ_DEFAULT_USER, RABBITMQ_DEFAULT_PASS
        links:
            - rabbitmq
            - postgres
        depends_on:
            - rabbitmq
            - postgres
    scrape:
        build: ./fundanl
        container_name: task
        command: python scraper/main.py
        env_file:
            - .env #RABBITMQ_DEFAULT_USER, RABBITMQ_DEFAULT_PASS
        links:
            - rabbitmq
            - postgres
        depends_on:
            - worker
            - rabbitmq
            - postgres
    geocode:
        build: ./fundanl
        container_name: geocode
        #command: python
        stdin_open: true
        tty: true
        env_file:
            - .env #RABBITMQ_DEFAULT_USER, RABBITMQ_DEFAULT_PASS
        links:
            - rabbitmq
            - postgres
        depends_on:
            - worker
            - rabbitmq
            - postgres
    monitor:
        build: ./fundanl
        container_name: flower
        entrypoint: celery
        command: "flower --port=5555 --basic_auth=$FLOWER_USER:$FLOWER_PASS"
        env_file:
            - .env #FLOWER_USER, FLOWER_PASS, CELERY_BROKER_URL=amqp://guest:guest@<broker_ipaddr>:5672// \
        depends_on:
            - rabbitmq
        ports:
            - '5555:5555'
        expose:
            - '5555'
    rproxy:
        image: anuragrana/rotating-proxy
        environment:
            - tors=25
        ports:
            - '5566:5566'
            - '4444:4444'
volumes:
    postgres_data: 
        external: true
        name: postgres_data
